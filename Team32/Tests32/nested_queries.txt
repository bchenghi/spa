1 - affects stmt
stmt s;
Select s.stmt# such that Affects(12, s)
11, 12
5000
2 - prog_line affects wildcard
prog_line n;
Select n such that Affects(n, _)
2, 5, 7, 8, 12, 21, 24, 27, 28, 33, 37, 53
5000
3 - prog_line affects assign
prog_line n; assign a;
Select <n, a.stmt#> such that Affects(n, a)
2 7, 5 11, 5 12, 7 8, 8 10, 8 11, 12 11, 12 12, 21 21, 24 24, 27 27, 28 30, 33 33, 37 37, 53 53
5000
4 - stmt affects
stmt s;
Select s.stmt# such that Affects*(s, 11)
2, 5, 7, 8, 12
5000
5 - wildcard affects assign
assign a;
Select a.stmt# such that Affects*(_, a)
7, 8, 10, 11, 12, 21, 24, 27, 30, 33, 37, 53
5000
6 - stmt affects prog_line
stmt s; prog_line n;
Select <s.stmt#, n> such that Affects*(s, n)
2 7, 2 8, 2 10, 2 11, 5 11, 5 12, 7 8, 7 10, 7 11, 8 10, 8 11, 12 11, 12 12, 21 21, 24 24, 27 27, 28 30, 33 33, 37 37, 53 53
5000
7 - calls procedure
procedure p;
Select p.procName such that Calls(p, "e")
a, c
5000
8 - wildcard called by procedure
procedure p;
Select p.procName such that Calls(_, p)
b, c, d, e, f
5000
9 - procedure calls procedure
procedure p1, p2;
Select <p1.procName, p2.procName> such that Calls(p1, p2)
a b, a e, b c, b d, c d, c e, d f
5000
10 - procedure calls procedure
procedure p1, p2;
Select <p1.procName, p2.procName> such that Calls*(p1, p2)
a b, a c, a d, a e, a f, b c, b d, b e, b f, c d, c e, c f, d f
5000
11 - wildcard called by procedure
procedure p;
Select p.procName such that Calls*(_, p)
b, c, d, e, f
5000
12 - calls procedure
procedure p;
Select p.procName such that Calls*(p, "f")
a, b, c, d
5000
13 - read followed by stmt
read r; stmt s;
Select <r.stmt#, s.stmt#> such that Follows(r, s)
4 5, 16 17, 17 18, 25 26, 35 36, 39 40, 46 47, 55 56
5000
14 - print followed by assign
print p; assign a;
Select <p.varName, a.stmt#> such that Follows(p, a)
k 57
5000
15 - assign followed by stmt
assign a; stmt s;
Select <a.stmt#, s.stmt#> such that Follows(a, s)
2 3, 3 4, 5 6, 7 8, 8 9, 10 11, 11 12, 28 29, 30 31, 43 44, 47 48, 53 54
5000
16 - assign followed by assign
assign a1, a2;
Select <a1.stmt#, a2.stmt#> such that Follows*(a1, a2)
2 3, 2 5, 2 13, 3 5, 3 13, 5 13, 7 8, 7 10, 7 11, 7 12, 8 10, 8 11, 8 12, 10 11, 10 12, 11 12, 30 33, 53 57
5000
17 - follows read
read r;
Select r.varName such that Follows*(r, 47)
k, t
5000
18 - wildcard follows if
if i;
Select i.stmt# such that Follows*(i, _)
40, 49, 58
5000
19 - followed by print
print p;
Select p.varName such that Next(p, _)
a, k, m, n, p, t, v
5000
20 - if followed by stmt
if i; stmt s;
Select <i.stmt#, s.stmt#> such that Next(i, s)
40 41, 40 43, 49 50, 49 51, 58 59, 58 60, 61 62, 61 63
5000
21 - assign followed by while
assign a; while w;
Select <a.stmt#, w.stmt#> such that Next(a, w)
5 6, 12 6, 21 20, 24 22, 27 26, 28 29, 33 29, 37 36, 50 52, 51 52, 57 52
5000
22 - followed by print
print p;
Select p.stmt# such that Next*(p, 47)
41, 42, 45
5000
23 - if followed by stmt
if i; stmt s;
Select <i.stmt#, s.stmt#> such that Next*(i, s)
40 41, 40 42, 40 43, 40 44, 40 45, 40 46, 40 47, 40 48, 49 50, 49 51, 49 52, 49 53, 49 54, 49 55, 49 56, 49 57, 58 59, 58 60, 58 61, 58 62, 58 63, 61 62, 61 63
5000
24 - assign followed by while
assign a; while w;
Select <a.stmt#, w.stmt#> such that Next*(a, w)
2 6, 3 6, 5 6, 7 6, 8 6, 10 6, 11 6, 12 6, 21 20, 21 22, 24 22, 27 26, 27 29, 27 36, 28 29, 28 36, 30 29, 30 36, 33 29, 33 36, 37 36, 50 52, 51 52, 53 52, 57 52
5000
25 - s1 parent of s2
stmt s1, s2;
Select <s1.stmt#, s2.stmt#> such that Parent(s1, s2)
6 7, 6 8, 6 9, 6 10, 6 11, 6 12, 20 21, 22 23, 22 24, 26 27, 29 30, 29 31, 29 32, 29 33, 36 37, 40 41, 40 42, 40 43, 40 44, 49 50, 49 51, 52 53, 52 54, 52 55, 52 56, 52 57, 58 59, 58 60, 61 62, 61 63
5000
26 - while parent of read
while w; read r;
Select <w.stmt#, r.varName> such that Parent(w, r)
52 k
5000
27 - if parent of if
if i1, i2;
Select <i1.stmt#, i2.stmt#> such that Parent(i1, i2)
none
5000
28 - if parent of print
if i; print p;
Select <i.stmt#, p.varName> such that Parent*(i, p)
40 k, 40 n, 58 p
5000
29 - while parent of if
while w; if i;
Select <w.stmt#, i.stmt#> such that Parent*(w, i)
none
5000
30 - while parent of read
while w; read r;
Select <w.stmt#, r.varName> such that Parent*(w, r)
52 k
5000
31 - call that modified variable
call c; variable v;
Select <c.procName, v.varName> such that Modifies(c, v)
b c, b k, b n, b m, b t, b x, b y, c c, c k, c n, c m, c t, c x, c y, d c, d k, d n, d t, d y, e k, e n, e x, f k, f n, f y
5000
32 - variable modified by if container
if i; variable v;
Select <i.stmt#, v.varName> such that Modifies(i, v)
40 c, 40 n, 49 k, 49 x, 58 k, 61 n, 61 y
5000
33 - while container that modified variable
while w; variable v;
Select <w.stmt#, v.varName> such that Modifies(w, v)
6 i, 6 k, 6 n, 6 x, 6 y, 6 z, 20 t, 22 c, 22 k, 22 m, 22 n, 22 t, 22 y, 26 n, 29 c, 29 k, 29 m, 29 n, 29 t, 29 y, 36 t, 52 k, 52 n
5000
34 - variable used by while container
while w; variable v;
Select <w.stmt#, v.varName> such that Uses(w, v)
6 i, 6 k, 6 n, 6 x, 6 z, 20 t, 22 a, 22 d, 22 k, 22 m, 22 n, 22 p, 22 t, 22 x, 22 y, 22 z, 26 n, 29 a, 29 d, 29 k, 29 m, 29 n, 29 p, 29 q, 29 t, 29 x, 29 y, 29 z, 36 t, 52 k, 52 n
5000
35 - if container that used variable
if i; variable v;
Select <i.stmt#, v.varName> such that Uses(i, v)
40 k, 40 n, 40 x, 40 y, 40 z, 49 x, 58 k, 58 p, 61 d, 61 k, 61 m, 61 n, 61 z
5000
36 - variable used by call
call c; variable v;
Select <c.procName, v.varName> such that Uses(c, v)
b a, b d, b k, b m, b n, b p, b q, b t, b v, b x, b y, b z, c a, c d, c k, c m, c n, c p, c q, c t, c x, c y, c z, d a, d d, d k, d m, d n, d p, d t, d x, d y, d z, e k, e n, e x, f d, f k, f m, f n, f p, f z
5000
37 - match wildcard variable with wildcard expression
assign a;
Select a.stmt# pattern a(_, _)
2, 3, 5, 7, 8, 10, 11, 12, 13, 21, 24, 27, 28, 30, 33, 37, 43, 47, 50, 51, 53, 57, 59, 62, 63
5000
38 - assignment matched with constant subtree
assign a; variable v;
Select <a.stmt#, v.varName> pattern a(v, _"1"_)
7 x, 8 z, 12 i, 21 t, 24 m, 27 n, 30 n, 33 m, 37 t, 43 n, 47 k, 50 k, 51 x, 57 k, 59 k, 62 n
5000
39 - assignment fully matched
assign a; variable v;
Select <a.stmt#, v.varName> pattern a(v, "n + 1")
43 n
5000
40 - match wildcard variable
if i;
Select i.stmt# pattern i(_, _, _)
40, 58, 61
5000
41 - match variable k
if i;
Select i.stmt# pattern i("z", _, _)
40, 61
5000
42 - match variable
if i; variable v;
Select <i.stmt#, v.varName> pattern i(v, _, _)
40 k, 40 x, 40 y, 40 z, 58 k, 61 d, 61 k, 61 z
5000
43 - match wildcard variable
while w;
Select w.stmt# pattern w(_, _)
6, 22, 26, 29, 36, 52
5000
44 - match variable k
while w;
Select w.stmt# pattern w("n", _)
26, 52
5000
45 - match variable
while w; variable v;
Select <w.stmt#, v.varName> pattern w(v, _)
6 i, 22 m, 26 n, 29 d, 29 p, 29 q, 29 y, 36 t, 52 n
5000
46 - constant value same as stmt no
constant con; stmt s;
Select <con.value, s.stmt#> with con.value = s.stmt#
1 1, 2 2, 3 3, 4 4, 5 5, 6 6, 16 16, 21 21, 44 44, 45 45, 47 47, 48 48
5000
47 - read variable same as procedure name
procedure p; print pt;
Select <pt.stmt#, p.procName> with pt.varName = p.procName
45 a
5000
48 - variable same as called procedure name
call c; variable v;
Select <v.varName, c.procName> with v.varName = c.procName
c c, d d
5000
49 - read and print with same variable and read is followed by print
read r; print p;
Select <r.varName, p.stmt#> with r.varName = p.varName such that Next*(r, p)
k 41, k 56, m 19, n 31, t 18
5000
50 - assign stmt that affects another stmt
assign a; variable v;
Select <a.stmt#, v.varName> such that Affects(a, _) pattern a(v, _)
2 x, 5 i, 7 x, 8 z, 12 i, 21 t, 24 m, 27 n, 28 n, 33 m, 37 t, 53 n
5000
51 - procedure that calls other procedures that shares a name with variable
procedure p; variable v;
Select <p.procName, v.varName> with p.procName = v.varName such that Calls*(p, _)
a a, c c, d d
5000
52 - procedure that modifies if control variable
procedure p; if i; variable v;
Select <p.procName, i.stmt#, v.varName> such that Modifies(p, v) pattern i(v, _, _)
a 40 k, a 40 x, a 40 y, a 40 z, a 58 k, a 61 k, a 61 z, b 40 k, b 40 x, b 40 y, b 58 k, b 61 k, c 40 k, c 40 x, c 40 y, c 58 k, c 61 k, d 40 k, d 40 y, d 58 k, d 61 k, e 40 k, e 40 x, e 58 k, e 61 k, f 40 k, f 40 y, f 58 k, f 61 k
5000
53 - control variable for if and while stmts
if i; while w; variable v;
Select <i.stmt#, w.stmt#, v.varName> pattern w(v, _) and i(v, _, _)
40 29 y, 61 29 d
5000
54 - called procedure with same name as read variable, with read stmt being a constant used
call c; read r; constant con;
Select <c.stmt#, r.varName, con.value> with c.procName = r.varName and r.stmt# = con.value
14 c 44
5000
55 - procedure with same name as print variable, with print stmt being a constant used
procedure p; print pt; constant con;
Select <p.procName, pt.stmt#, con.value> with p.procName = pt.varName and pt.stmt# = con.value
a 45 45
5000
56 - variable affects another variable
assign a1, a2; variable v1, v2;
Select <v1.varName, v2.varName> such that Affects(a1, a2) pattern a1(v1, _) and a2(v2, _)
i i, i z, m m, n n, t t, x x, x z, z y, z z
5000
57 - variable indirectly affects another variable
assign a1, a2; variable v1, v2;
Select <v1.varName, v2.varName> pattern a1(v1, _) and a2(v2, _) such that Affects*(a1, a2)
i i, i z, m m, n n, t t, x x, x y, x z, z y, z z
5000
58 - procedure indirectly calls procedure in read stmt
procedure p1, p2; read r;
Select <p1.procName, r.stmt#> with r.varName = p2.procName such that Calls*(p1, p2)
a 44, b 44
5000
